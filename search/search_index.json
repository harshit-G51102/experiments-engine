{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ExE","text":""},{"location":"#what-is-the-experiments-engine","title":"What is the Experiments Engine?","text":"<p>Experiments Engine (ExE) enables social sector orgs with digital offerings to create and monitor experiments.</p>"},{"location":"#features","title":"Features","text":"<ul> <li> Intuitive UI to create and monitor experiments</li> <li> Dashboard to monitor all your experiments in one place</li> <li> Get notified when events (e.g. number of trials run, number of days passed, etc.) occur</li> <li> Track users across experiments and arms</li> <li> Multiple methods: A/B testing, multi-armed bandit, and more</li> </ul> <p>Want other features not listed here? Raise an issue in our GitHub repository or reach out to us at dsem@idinsight.org</p>"},{"location":"#why-exe","title":"Why ExE?","text":"<p>As penetration of smart phones and internet has increased in the Global South, there has been a surge in the number of digital offerings by social sector organizations.</p> <p>Platform owners have numerous ideas on how to improve user experience and increase engagement but are hampered by the lack of technical expertise and resources to test these ideas.</p> <p>We are building ExE to reduce these barriers to experimentation. We want to make it easy for platform owners to test out their ideas and make data-driven decisions. Our goal is to help orgs iterate, learn, and improve their offerings at low cost.</p>"},{"location":"#what-is-it-not","title":"What is it not?","text":"<p>To measure the impact of your offering as a whole, you may need to do an impact evaluation. This tool does not replace that. Instead, it allows your to tweak nodes in your theory of change.</p> <p>If you are looking for unbiased estimates of average treatment effects (say you want to publish an academic paper) this tool is not for you. Instead, this tool is for platform owners who want to quickly learn what works and what doesn't.</p>"},{"location":"#who-is-it-for","title":"Who is it for?","text":"<p>ExE is for social sector orgs - NGOs, social enterprises, and developing country governments - who have digital offerings and a keen desire to improve them.</p>"},{"location":"#what-kind-of-ideas-can-i-test-out","title":"What kind of ideas can I test out?","text":"<p>Any idea where can both implement and measure the outcome digitally can be tested out using ExE.</p> <p>Here are some ideas our partners are interested in testing out:</p> <ul> <li> Does the personalised AI response lead to better user engagement?</li> <li> Does using a casual tone with younger users lead to higher completion rates?</li> <li> Does reducing the number of questions asked during onboarding lead to lower drop-off rates?</li> <li> What is the best time to send messages to ensure users engage with it?</li> <li> <p> Will this new feature lead to greater time spent on the platform?</p> </li> </ul> <p>Here are the principles that guide the design of ExE:</p> <ul> <li>Simple: You don't need to be statistician or engineer to use ExE. It is designed for non-technical platform owners to create and monitor experiments.</li> <li>Light-weight: ExE is designed to be light-weight. We want to make it cheap for organizations to use.</li> <li>Minimal data collection: ExE should store minimal data about users.</li> <li>Open-source: ExE is open-source. We want to make it easy for organizations to use and contribute to the tool.</li> </ul>"},{"location":"#design-principles","title":"Design principles","text":""},{"location":"#who-are-we","title":"Who are we?","text":"<p>ExE is built by a team of data scientists, engineers, and statisticians at IDinsight. IDinsight's mission is to amplify the impact of our partners by using data and evidence to inform decisions.</p>"},{"location":"deploying/","title":"Deploying","text":""},{"location":"deploying/#deploying-using-docker-compose","title":"Deploying using docker compose","text":"<p>The simplest way to deploy the application is using docker compose. The following steps will guide you through the process.</p> <p>Ensure you have Docker installed</p> <p>Step 1: Clone the ExE repository.</p> <pre><code>git clone git@github.com:IDinsight/experiments-engine.git\n</code></pre> <p>Step 2: Navigate to the <code>deployment/docker-compose/</code> subfolder.</p> <pre><code>cd deployment/docker-compose/\n</code></pre> <p>Step 3: Copy <code>template.*.env</code> files to <code>.*.env</code>:</p> <pre><code>cp template.base.env .base.env\ncp template.backend.env .backend.env\n</code></pre> <p>Edit the <code>.base.env</code> and <code>.backend.env</code> files to set the environment variables.</p> <p>Step 4: Run docker-compose</p> <pre><code>docker compose -f docker-compose.yml -p exe-stack up -d --build\n</code></pre> <p>You can now view the ExE app at <code>https://$DOMAIN/</code> (by default, this should be https://localhost/) and the API documentation at <code>https://$DOMAIN/api/docs</code> (you can also test the endpoints here).</p> <p>Step 5: Shutdown containers</p> <pre><code>docker compose -f docker-compose.yml -f docker-compose.dev.yml -p exe-stack down\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"first-experiment/","title":"Set up your first experiment","text":"<p>This shows you how to setup a multi-armed bandit (MAB) on the platform. It will show you how to create a new experiment, add multiple arms, integrate with your app, and track the results.</p> <ul> <li> <p> Create your experiment</p> <p>Setup a multi-armed bandit experiment with 3 arms.</p> <p> Create an experiment</p> </li> <li> <p> Integrate with your application</p> <p>Get your API key. Setup your app to call the right endpoints</p> <p> Integration</p> </li> <li> <p> Monitor your experiment</p> <p>See how your experiment is doing. Track the results.</p> <p> Monitor</p> </li> </ul>"},{"location":"first-experiment/create/","title":"Create an experiment","text":""},{"location":"first-experiment/create/#log-in-to-the-application","title":"Log in to the application","text":"<p>If you have deployed the docker containers locally as per the instructions here, you should see a login screen when you navigate to <code>https://localhost/</code></p> <p></p> <p>The credentials are what you set in your <code>.backend.env</code> file.</p>"},{"location":"first-experiment/create/#create-an-experiment_1","title":"Create an experiment","text":"<p>Once you have logged in, you should see a screen like this:</p> <p></p> <p>Click on the <code>+ New Experiment</code> button to create a new experiment.</p>"},{"location":"first-experiment/create/#fill-out-the-experiment-details","title":"Fill out the experiment details","text":"<p>Enter the details for the experiment. Both <code>Experiment Name</code> field and <code>Description</code> are mandatory. Select <code>MAB</code> as the experiment type.</p> <p></p> <p>Click on the <code>Next</code> button to proceed.</p>"},{"location":"first-experiment/create/#create-experiment-arms","title":"Create experiment arms","text":"<p>Click on the <code>+ Add Arm</code> button to add arms to the experiment. You can add as many arms as you like but must have a minimum of 2 arms.</p> <p></p> <p>Enter details for each arm. The <code>Name</code> and <code>Description</code> fields are both mandatory. You can also change the prior (1) for the arms.</p> <ol> <li>This MAB is using Thompson Sampling. The priors are defined through the <code>alpha</code> and <code>beta</code> parameters of the Beta distribution. The default values are <code>1</code> and <code>1</code> respectively. The higher the values, the more certain the arm is. The probability of success of the arm is calculated as <code>alpha / (alpha + beta)</code>. Side note: We realize this is not intuitive for the non-statistician. Look out for a visual way to set the priors in the future.</li> </ol> <p>Click on the <code>Next</code> button to proceed.</p>"},{"location":"first-experiment/create/#set-notifications","title":"Set notifications","text":"<p>You can select events when you should be notified. Let's select the first two and set values as in the image below.</p> <p></p> <p>Click on the <code>+ Create Experiment</code> to create the experiment.</p>"},{"location":"first-experiment/create/#experiment-created","title":"Experiment created","text":"<p>You will be taken to the home page where you can see the details of the experiment and the arms you created.</p> <p></p> <p>Now we are ready to integrate this with your application. Go to Integrate with your application to see how to do that.</p>"},{"location":"first-experiment/integrate/","title":"Integrate with your app","text":""},{"location":"first-experiment/integrate/#go-to-the-integration-page","title":"Go to the Integration page","text":"<p>Once you have created an experiment, you can integrate it with your app. Click on Integration in the menu to get to this page</p> <p></p>"},{"location":"first-experiment/integrate/#create-a-new-key","title":"Create a new key","text":"<p>Click on \"Recreate Key\" to create a new key. You should see a new key appear as per the image below</p> <p></p> <p>This key is used to authenticate your app with the API. You should keep it secret and not share it with anyone. This is the only time you will see this key, so make sure to copy it somewhere safe.</p>"},{"location":"first-experiment/integrate/#test-out-the-endpoints","title":"Test out the endpoints","text":"<p>You can now use Swagger to test out the API endpoints. Go to <code>https://localhost/api/docs</code> to see the Swagger UI. You will need to enter the key you just created to authenticate.</p> <p></p>"},{"location":"first-experiment/monitor/","title":"Monitor your experiment","text":"<p>Stay tuned! We are working on this section.</p>"}]}